
# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = true

continuation_prompt = "‚ñ∂‚ñ∂"

# Configure the format of the prompt
format = """$os\
        $username \
        $hostname\
        $shlvl\
        $kubernetes\
        $directory\
        $git_branch\
        $git_commit\
        $git_state\
        $git_status\
        $hg_branch\
        $docker_context\
        $package\
        (‚Üì Toolchain version modules ‚Üì)\
        $c\
        $cmake\
        $crystal\
        $dart\
        $deno\
        $dotnet\
        $elixir\
        $erlang\
        $golang\
        $java\
        $kotlin\
        $gradle\
        $lua\
        $fennel\
        $nim\
        $haxe\
        $nodejs\
        $ocaml\
        $perl\
        $php\
        $python\
        $ruby\
        $rust\
        $swift\
        $vlang\
        $zig\
        (‚Üë Toolchain version modules ‚Üë)\
        $memory_usage\
        $env_var\
        $custom\
        $cmd_duration\
        (‚Üë above input line ‚Üë)\
        $line_break\
        (‚Üì on input line ‚Üì)\
        $jobs\
        $battery\
        $time\
        $status\
        $character\
    """

# Replace the '‚ùØ' symbol in the prompt with '‚ûú'
[character]
success_symbol = '[‚ùØ](bold green)'
error_symbol = '[‚úó](bold red)'
vimcmd_symbol = "[‚ùÆ](bold green)"
vimcmd_replace_symbol = "[‚ùÆ](bold purple)"
vimcmd_replace_one_symbol = "[‚ùÆ](bold purple)"
vimcmd_visual_symbol = "[‚ùÆ](bold yellow)"

[battery]
full_symbol = "Û∞Åπ"
charging_symbol = "Û∞ÇÑ"
discharging_symbol = "Û∞ÇÉ"
format = "[$symbol$percentage]($style) "
[[battery.display]]
threshold = 10
style = "bold red"

[cmd_duration]
format = '\[[Ôî† $duration]($style)\]'
style = "bold cyan"
show_milliseconds = false
show_notifications = false
min_time = 2_000
min_time_to_notify = 45000

[directory]
format = "[Ôìì $path]($style) [$read_only]($read_only_style) "
truncation_length = 3
truncate_to_repo = true
truncation_symbol = "../"
style = "underline bold green"
read_only = "Û∞åæ"
read_only_style = "italic red"

[hostname]
ssh_only = true
ssh_symbol = "Û∞£Ä "
trim_at = "."
format = "[$hostname]($style) in "
style = " dimmed bold green"

[jobs]
threshold = 1
symbol_threshold = 1
number_threshold = 2
format = "[$symbol$number]($style) "
symbol = "‚ú¶"
style = "bold blue"

[line_break]
disabled = false

[memory_usage]
disabled = true
threshold = 75
format = '\[$symbol[$ram( | $swap)]($style)\] '
style = "bold dimmed white"
symbol = "Û∞çõ "

[os]
format = "[$symbol]($style) "
style = "bold #DDDAEC"
disabled = false

[os.symbols]
Alpine = "ÔåÄ "
Amazon = "Ôâ∞ "
Android = "ÔÖª "
Arch = "ÔåÉ "
CentOS = "ÔåÑ "
Debian = "ÔåÜ "
DragonFly = "Óäé "
Emscripten = "ÔàÖ "
EndeavourOS = "ÔÜó "
Fedora = "Ôåä "
FreeBSD = "Ôåå "
Garuda = "Û∞õì "
Gentoo = "Ôåç "
HardenedBSD = "Û∞ûå "
Illumos = "Û∞à∏ "
Linux = "Ôåö "
Macos = "ÔåÇ "
Manjaro = "Ôåí "
Mariner = "Ôáç "
MidnightBSD = "ÔÜÜ "
Mint = "Ôåé "
NetBSD = "ÔÄ§ "
NixOS = "Ôåì "
OpenBSD = "Û∞à∫ "
openSUSE = "Ôåî "
OracleLinux = "Û∞å∑ "
Pop = "Óä£ "
Raspbian = "Ôåï "
Redhat = "Ôåñ "
RedHatEnterprise = "Ôåñ "
Redox = "Ôîó "
Solus = "Û∞†≥ "
SUSE = "Ôåî "
Ubuntu = "Ôåõ "
Unknown = "Ôà≠ "
Windows = "Û∞ç≤ "

[package]
format = '\[[$symbol$version]($style)\]'
symbol = 'üì¶ '
style = 'bold 214'
display_private = false

[shlvl]
disabled = true
threshold = 2
format = "[$symbol$shlvl]($style) "
symbol = "‚Üï"
style = "bold yellow"
repeat_offset = 0

[status]
format = "[$symbol$status]($style) "
style = "bold red"
symbol = "‚úñ"
success_symbol = ""
not_executable_symbol = "ÔÅû"
not_found_symbol = "ÔÄÇ"
sigint_symbol = "ÔÅ±"
signal_symbol = "ÔÄí"
recognize_signal_code = true
map_symbol = false
pipestatus = false
pipestatus_separator = "|"
pipestatus_format = '\[pipestatus\] => [symbolcommon_meaningsignal_namemaybe_int](style)'
pipestatus_segment_format = ""

[sudo]
format = "[as $symbol]($style)"
style = "bold green"
symbol = "ÔÉê "

[username]
style_user = "bold bright-white"
style_root = "red bold"
format = "[ÔÄá $user]($style) in"
disabled = false
show_always = true

# ----------------------------- Version control system about ----------------------------
[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
style = "red bold"
stashed = '\$'
ahead = "‚á°"
behind = "‚á£"
diverged = "‚áï"
conflicted = "="
deleted = "‚úò"
renamed = "¬ª"
modified = "!"
staged = "+"
untracked = "?"
ignore_submodules = true

[git_branch]
format = '\[[$symbol$branch]($style)\]'
symbol = "Óú• "
style = "bold purple"
always_show_remote = true
only_attached = false
ignore_branches = []

[git_commit]
format = '[\($hash$tag\)]($style) '
style = "bold greee"
only_detached = true
commit_hash_length = 7
tag_symbol = " Û∞ìπ  "
tag_disabled = false
tag_max_candidates = 0

[git_state]
format = '\([$state( $progress_current/$progress_total)]($style)\) '
style = "bold bright-yellow"
rebase = "REBASING"
merge = "MERGING"
revert = "REVERTING"
cherry_pick = "CHERRY-PICKING"
bisect = "BISECTING"
am = "AM"
am_or_rebase = "AM/REBASE"

[git_metrics]
format = "([+$added]($added_style) )([-$deleted]($deleted_style) )"
added_style = "bold green"
deleted_style = "bold red"
only_nonzero_diffs = true
ignore_submodules = true

# Mercurial
[hg_branch]
format = 'on [$symbol$branch]($style) '
symbol = "Û∞ò¨ "
style = "bold purple"
truncation_length = 8                   # default = 2^63 - 1
truncation_symbol = "‚Ä¶"
disabled = false

[pijul_channel]
format = 'on [$symbol$channel]($style) '
symbol = "ÓÇ† "
style = "bold purple"
truncation_length = 10
truncation_symbol = "‚Ä¶"
disabled = false

# ------------------------------------- Docker about ------------------------------------
[docker_context]
format = '\[[$symbol$context]($style)\]'
symbol = 'Û∞°® '
style = 'blue bold'
detect_files = ['docker-compose.yml', 'docker-compose.yaml', 'Dockerfile']

[kubernetes]
format = '\[[$symbol$context( \($namespace\))]($style)\]'
symbol = "‚ò∏ "
style = "cyan bold"

[container]
format = '\[[$symbol($version)]($style)\]'
symbol = 'Ôí∑ '
style = 'bold red dimmed'

[vagrant]
format = '\[[$symbol($version )]($style)\]'
symbol = "‚ç± "
style = "bold cyan"
detect_files = ["Vagrantfile"]

# ------------------------------ Language or Runtime about ------------------------------
[buf]
format = '\[[$symbol($version)]($style)\]'
symbol = 'üêÉ '
style = 'bold blue'
detect_files = ["buf.yaml", "buf.gen.yaml", "buf.work.yaml"]

[bun]
format = '\[[$symbol($version)]($style)\]'
symbol = 'üçû '
style = 'bold red'
detect_files = ["bun.lockb", "bunfig.toml"]

[c]
format = '\[[$symbol($version(-$name))]($style)\]'
symbol = "Óòû "
style = 'bold 149'
commands = [["cc", "--version"], ["gcc", "--version"], ["clang", "--version"]]
detect_extensions = ["c", "h"]

[cmake]
format = '\[[$symbol($version)]($style)\]'
symbol = 'CMake '
style = 'bold red'
detect_files = ["CMakeLists.txt", "CMakeCache.txt"]

[crystal]
format = '\[[$symbol($version)]($style)\]'
symbol = 'ÓòØ '
style = 'bold black'
detect_extensions = ["cr"]
detect_files = ["shard.yml"]

[dart]
format = '\[[$symbol($version)]($style)\]'
symbol = "Óûò "
style = "bold blue"
detect_extensions = ["dart"]
detect_files = ["pubspec.yaml", "pubspec.yml", "pubspec.lock"]
detect_folders = [".dart_tool"]

[deno]
format = '\[[$symbol($version)]($style)\]'
symbol = 'ü¶ï '
style = 'green bold'
detect_files = [
  "deno.json",
  "deno.jsonc",
  "mod.ts",
  "deps.ts",
  "mod.js",
  "deps.js",
]

[dotnet]
format = '\[[$symbol($version)(üéØ $tfm)]($style)\]'
symbol = "‚Ä¢NET "
style = "blue bold"
heuristic = true
detect_extensions = ["csproj", "fsproj", "xproj"]
detect_files = [
  "global.json",
  "project.json",
  "Directory.Build.props",
  "Directory.Build.targets",
  "Packages.props",
]

[elixir]
format = '\[[$symbol($version \(OTP $otp_version\))]($style)\]'
symbol = "Óò≠ "
style = "bold purple"
detect_extensions = []
detect_files = ["mix.exs"]

[elm]
format = '\[[$symbol($version)]($style)\]'
symbol = "Óò¨ "
style = "bold blue dimmed"
detect_extensions = ["elm"]
detect_files = ["elm.json", "elm-package.json", ".elm-version"]
detect_folders = ["elm-stuff"]

[erlang]
format = '\[[$symbol($version)]($style)\]'
symbol = "Óû± "
style = "bold red"
detect_extensions = []
detect_files = ["rebar.config", "erlang.mk"]

[fennel]
format = '\[[$symbol($version)]($style)\]'
symbol = 'üßÖ '
style = 'bold 121'
detect_extensions = ["fnl"]
detect_folders = ["fnl"]

[golang]
format = '\[[$symbol($version)]($style)\]'
symbol = "Óòß "
style = "bold cyan"
not_capable_style = "bold red"
detect_extensions = ["go"]
detect_files = [
  "go.mod",
  "go.sum",
  "go.work",
  "glide.yaml",
  "Gopkg.yml",
  "Gopkg.lock",
  ".go-version",
]
detect_folders = ["Godeps"]

[gradle]
format = '\[[$symbol($version)]($style)\]'
symbol = "Óô† "
style = "bold bright-cyan"
detect_extensions = ["gradle", "gradle.kts"]
detect_folders = ["gradle"]

[haskell]
format = '\[[$symbol($version)]($style)\]'
symbol = "Óù∑ "
style = 'bold purple'
detect_extensions = ["hs", "cabal", "hs-boot"]
detect_files = ["stack.yaml", "cabal.project"]

[haxe]
format = '\[[$symbol($version)]($style)\]'
symbol = 'Óô¶ '
style = "bold fg:202"
detect_extensions = ["hx", "hxml"]
detect_files = ["haxelib.json", "hxformat.json", ".haxerc"]
detect_folders = [".haxelib", "haxe_libraries"]

[java]
format = '\[[$symbol($version)]($style)\]'
symbol = "Óâñ "
style = "red dimmed"
detect_extensions = ["java", "class", "jar", "gradle", "clj", "cljc"]
detect_files = [
  "pom.xml",
  "build.gradle.kts",
  "build.sbt",
  ".java-version",
  "deps.edn",
  "project.clj",
  "build.boot",
  ".sdkmanrc",
]

[julia]
format = '\[[$symbol($version)]($style)\]'
symbol = "‡ÆÉ "
style = "bold purple"
detect_extensions = ["jl"]
detect_files = ["Project.toml", "Manifest.toml"]

[kotlin]
format = '\[[$symbol($version)]($style)\]'
symbol = 'Óò¥ '
style = 'bold bright-blue'
detect_extensions = ["kt", "kts"]
kotlin_binary = "kotlin"

[lua]
format = '\[[$symbol($version)]($style)\]'
symbol = 'Óò† '
style = 'bold blue'
detect_extensions = ["lua"]
detect_files = [".lua-version"]
detect_folders = ["lua"]
lua_binary = "lua"

[meson]
format = '\[[$symbol$project]($style)\]'
symbol = 'Meson '
style = 'bold purple'
truncation_length = 10
truncation_symbol = "‚Ä¶"

[nim]
format = '\[[$symbol($version)]($style)\]'
symbol = "Óô∑ "
style = "bold yellow"
detect_extensions = ["nim", "nims", "nimble"]
detect_files = ["nim.cfg"]

[nodejs]
format = '\[[$symbol($version)]($style)\]'
symbol = 'Óúò '
style = "bold green"
detect_extensions = ["js", "mjs", "cjs", "ts", "mts", "cts", "jsx", "tsx"]
detect_files = [
  "package.json",
  ".node-version",
  ".nvmrc",
  ".pnp.cjs",
  ".pnp.loader.mjs",
]
detect_folders = ["node_modules"]

[ocaml]
format = '\[[$symbol($version)(\($switch_indicator$switch_name\))]($style)\]'
symbol = "Óô∫ "
style = "bold 208"
global_switch_indicator = ""
local_switch_indicator = "*"
detect_extensions = ["opam", "ml", "mli", "re", "rei"]
detect_files = ["dune", "dune-project", "jbuild", "jbuild-ignore", ".merlin"]
detect_folders = ["_opam", "esy.lock"]

[perl]
format = '\[[$symbol($version)]($style)\]'
symbol = "Óù© "
style = "bold 149"
detect_extensions = ["pl", "pm", "pod"]
detect_files = [
  "Makefile.PL",
  "Build.PL",
  "cpanfile",
  "cpanfile.snapshot",
  "META.json",
  "META.yml",
  ".perl-version",
]

[php]
format = '\[[$symbol($version)]($style)\]'
symbol = 'Óòà '
style = "bold 147"
detect_extensions = ["php"]
detect_files = ["composer.json", ".php-version"]

[purescript]
format = '\[[$symbol($version)]($style)\]'
symbol = "Óò∞ "
style = "bold white"
detect_extensions = ["purs"]
detect_files = ["spago.dhall"]

[python]
format = '\[[${symbol}${pyenv_prefix}(${version})(\($virtualenv\))]($style)\]'
symbol = "ÓòÜ "
style = "bold yellow"
pyenv_version_name = false
pyenv_prefix = "pyenv "
python_binary = ["python", "python3"]
detect_extensions = ["py"]
detect_files = [
  "requirements.txt",
  ".python-version",
  "pyproject.toml",
  "Pipfile",
  "tox.ini",
  "setup.py",
  "__init__.py",
]

[rlang]
format = '\[[$symbol($version)]($style)\]'
symbol = "Û∞üî "
style = "blue bold"
detect_extensions = ["R", "Rd", "Rmd", "Rproj", "Rsx"]
detect_files = [".Rprofile"]
detect_folders = [".Rproj.user"]

[raku]
format = '\[[$symbol($version-vm_version)]($style)\]'
symbol = "ü¶ã "
style = "bold 149"
detect_extensions = ["p6", "pm6", "pod6", "raku", "rakumod"]
detect_files = ["META6.json"]

[ruby]
format = '\[[$symbol($version)]($style)\]'
symbol = "Óúπ "
style = "bold red"
detect_extensions = ["rb"]
detect_files = ["Gemfile", ".ruby-version"]

[rust]
format = '\[[$symbol($version)]($style)\]'
symbol = 'ü¶Ä '
style = "bold 124"
detect_extensions = ["rs"]
detect_files = ["Cargo.toml"]

[scala]
format = '\[[$symbol($version)]($style)\]'
symbol = "Óú∑ "
style = 'bold red dimmed'
detect_extensions = ["sbt", "scala"]
detect_files = [".scalaenv", ".sbtenv", "build.sbt"]
detect_folders = [".metals"]

[solidity]
format = '\[[$symbol($version)]($style)\]'
version_format = "v${major}.${minor}.${patch}"
symbol = "S "
style = "bold 19"
compiler = ["solc"]
detect_extensions = ["sol"]

[swift]
format = '\[[$symbol($version)]($style)\]'
symbol = 'Óùï '
style = "bold 202"
detect_extensions = ["swift"]
detect_files = ["Package.swift"]

[vlang]
format = '\[[$symbol($version)]($style)\]'
symbol = "Óö¨ "
style = "bold 69"
detect_extensions = ["v"]
detect_files = ["v.mod", "vpkg.json", ".vpkg-lock.json"]

[zig]
format = '\[[$symbol($version)]($style)\]'
symbol = '‚ÜØ '
style = 'bold bright-yellow'
detect_extensions = ["zig"]
